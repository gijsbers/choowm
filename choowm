#!/bin/bash
#
# Show a graphical dialog to the user with a list of
# all the installed window managers for this system.
# If the user chooses one then run it and wait.
# Repeat this cycle until the user cancels.
# Put this as the last command in your ~/.xinitrc.
#
# Copyright Bert Gijsbers
# Apache 2.0 license
#

# we need either of the following dialog helpers:
xmessage=$(command -v xmessage)
zenity=$(command -v zenity)

# a list of all known window managers.
# a wm may have an absolute path.
# a wm may have arguments when quoted.
declare -a WIMS=(
2bwm
2wm
3Dwm
9wm
aewm
aewm++
afterstep
ahwm
ajaxwm
alloywm
alopex
alpt-wm
amaterus
amiwm
antico
awesome
awm
badwm
beryl
blackbox
bluetile
braintop
bspwm
byobu
bwm
catwm
cinnamon-session
compiz
cons-wm
ctwm
cwm
dminiwm
dswm
dvtm
dwemo
dwm
echinus
eggwm
enlightenment_start
euclid-wm
evilwm
exwm
fluxbox
flwm
frankenwm
fvwm2
gnome-session
goomwwm
hazewm
herbstluftwm
howm
i3
icewm-session
ion
ion3
jbwm
jwm
karmen
kwin
larswm
lwm
lxqt
marco
matchbox
mate-session
matwm2
mazewm
metacity
metisse
miwm
mlvwm
monsterwm
musca
mutter
notion
olvwm
openbox-session
oroborus
pawm
pekwm
pwm
qtile
qvwm
ratpoison
razor-session
sawfish
scrotwm
smallwm
snapwm
spectrwm
starte16
startede
startfluxbox
startkde
startlxde
startxfce4
stumpwm
sway
tabletwm
teslawm
tinywm
twm
unity
uwm
velox
waimea
windowlab
windowmaker
wingo
wmaker
wm2
wmfs
wmfs2
wmii
wtftw
xfwm4
xige
xmonad
xoat
xpde
xswm
xtags
xwem
xynth
yawm
yeahwm
zde
zwm
)

errx () { echo "$@" >&2 ; exit 1 ; }
fail () { errx "${0##*/}: $@" ; }
abort () { fail "Aborted." ; }
nowim () { fail "No window manager found!" ; }
usage () { errx "Usage: $0 [ -n | -i initialwm ]" ; }

unset butn btns dryrun hasinit initial listing names paths temp wim

# parse options
while [[ $# -gt 0 ]]; do
    case $1 in
        -l) listing=1 ;;
        -n) dryrun=1 ;;
        -i) [[ -n $2 ]] || usage ; initial=$2 ; shift ;;
        *) usage ;;
    esac
    shift
done

# remember wm names with executables
declare -a names
declare -a paths

# locate every window manager
for w in "${WIMS[@]}"; do
    # remove arguments
    n=${w/ *}
    # has directories?
    if [[ $n =~ / ]]; then
        # get path
        p=$n
        # get basename
        n=${n##*/}
        # executable file
        [[ -x $p && -f $p ]] || continue
    else
        # locate executable
        p=$(command -v $n) || continue
        # include path
        w=${p%/*}/$w
    fi
    # s is n without pre/postfix
    s=${n#start}
    s=${s%_start}
    s=${s%-session}
    if [[ -v initial && ! -v hasinit ]]; then
        if [[ $p = $initial || $n = $initial || $s = $initial ]]; then
            # remember wm index
            hasinit=${#names[@]}
        fi
    fi
    # remember wm name and location
    names+=("$s")
    paths+=("$w")
    unset n p s w x
done

# abort if no window managers
[[ ${#names[@]} -lt 1 ]] && nowim

# create a new tempfile
temp=$(mktemp)

# on exit cleanup this tempfile
trap 'rm -f -- "$temp"' 0

if [[ -n $hasinit ]]; then
    # the button has been given
    butn=$hasinit
elif [[ -n $listing ]]; then
    # print wms
    for ((i=0; $i < ${#names[@]}; i++)) ; do
        printf '%-2d  %-11s  %s\n' $i "${names[$i]}" "${paths[$i]}"
    done
    exit 0
elif [[ -n $zenity ]]; then
    # construct a zenity dialog
    cat >>$temp <<-'EOF'
	exec zenity --list \
	    --width=400 \
	    --height=400 \
	    --hide-column=1 \
	    --print-column=1 \
	    --title="Choose window manager" \
	    --text="Please choose one of the following window managers:" \
	    --column="#" \
	    --column="Name" \
	    --column="Location" \
EOF
    for ((i=0; $i < ${#names[@]}; i++)) ; do
        printf '%6d  "%s"  "%s" \\\n' $i "${names[$i]}" "${paths[$i]}"
    done >> $temp
    echo >> $temp
    butn=$(sh $temp 2>/dev/null)
elif [[ -n $xmessage ]]; then
    # construct an xmessage dialog
    printf "Please choose one of the following window managers:\n\n" >>$temp
    for ((i=0; $i < ${#names[@]}; i++)) ; do
        printf "%2d  %-11s  %s\n" $i "${names[$i]}" "${paths[$i]}"
        [[ -v btns ]] && btns+=,
        btns+=$i
    done >> $temp
    echo >> $temp
    butn=$(xmessage -title 'Choose window manager' \
        -font 9x15bold -center -print \
        -buttons $btns,Cancel -default 0 -file $temp)
else
    fail "Please install zenity or xmessage."
fi
x=$?
[[ $x = 1 || ! $butn =~ ^[0-9]+$ ]] && abort
[[ $butn -ge ${#names[@]} ]] && abort
wim=${paths[$butn]}

# cleanup
rm -f -- "$temp"
trap '' 0

# -n option only echoes
[[ $dryrun = 1 ]] && exec echo "$wim"

# run window manager
$wim

# log wm exit
echo "$wim exited $?"

# restart
exec "$0"

